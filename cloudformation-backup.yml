{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Standard VPC Design: Private/Public Subnets.",
  "Parameters" : {

    "VpcName" : {
      "Description": "Name of the VPC - Used to dynamically name the VPC, IGW, Routing Tables and Subnets.",
      "Type": "String",
      "MinLength": "3",
      "MaxLength": "25",
      "ConstraintDescription": "Must be in ALL CAPS with only DASHES as the separator. Examples: DEV-ECS1, US1, STAGING-US1.",
    "Default": "MZCF-VPC", 
      "AllowedPattern": "^([a-zA-Z-\\d]+)"
    },
  
    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
    "Default":"aws-us-west-2",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },
  "MZCFDBAmiId": { "Type": "String", "Default":"ami-5fbb5a25" },
  "MZCFAppAmiId": { "Type": "String", "Default":"ami-eebd5c94" },
  "MZCFBastionAmiId": { "Type": "String", "Default":"ami-5daf213d" }

  },

  "Resources" : {

    "VPC" : { "Type": "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "10.0.0.0/16",
        "Tags" : [
          {"Key": "Name", "Value" : { "Ref": "VpcName" } },
          {"Key": "Application", "Value" : { "Ref": "AWS::StackId"} },
          {"Key": "network", "Value": "public" }
        ]
      }
    },
  
    "PublicSubnetDMZA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.0.1.0/24",
    "MapPublicIpOnLaunch" : true,
    "AvailabilityZone" : { "Fn::Join": [ "", [ { "Ref": "AWS::Region" }, "a" ] ] },
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

  
  "PublicSubnetDMZB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.0.2.0/24",
    "MapPublicIpOnLaunch" : true,
    "AvailabilityZone" : { "Fn::Join": [ "", [ { "Ref": "AWS::Region" }, "b" ] ] },
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

  
  "PrivateSubnetAppA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.0.3.0/24",
    "AvailabilityZone" : { "Fn::Join": [ "", [ { "Ref": "AWS::Region" }, "a" ] ] },
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },
    
  "PrivateSubnetAppB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.0.4.0/24",
    "AvailabilityZone" : { "Fn::Join": [ "", [ { "Ref": "AWS::Region" }, "b" ] ] },
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },
  
  
  "PrivateSubnetDBA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.0.5.0/24",
    "AvailabilityZone" : { "Fn::Join": [ "", [ { "Ref": "AWS::Region" }, "a" ] ] },
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },
  
  
  
  
  "PrivateSubnetDBB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.0.6.0/24",
    "AvailabilityZone" : { "Fn::Join": [ "", [ { "Ref": "AWS::Region" }, "b" ] ] },
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },
  
    "InternetGateway" : { "Type": "AWS::EC2::InternetGateway",
      "Metadata" : { "Description" : "Provides Internet Access (1-to-1 NATing) for the Public Subnets." },
      "Properties" : {
        "Tags" : [
          {"Key": "Name", "Value" : { "Fn::Join": [ "", [ {"Ref": "VpcName"}, "-CFN-IGW" ] ] } },
          {"Key": "Application", "Value" : { "Ref": "AWS::StackId"} },
          {"Key": "network", "Value": "public" }
        ]
      }
    },

    "AttachGateway" : { "Type": "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref": "VPC" },
         "InternetGatewayId" : { "Ref": "InternetGateway" }
       }
    },

    "PublicRouteTable" : { "Type": "AWS::EC2::RouteTable",
      "Metadata" : { "Description" : "A single Routing Table for all Public Subnets." },
      "Properties" : {
        "VpcId" : {"Ref": "VPC"},
        "Tags" : [
          {"Key": "Name", "Value" : { "Fn::Join": [ "", [ {"Ref": "VpcName"}, "-PUBLIC-RT" ] ] } },
          {"Key": "Application", "Value" : { "Ref": "AWS::StackId"} },
          {"Key": "network", "Value": "public" }
        ]
      }
    },
  
    "PublicRoute" : { "Type": "AWS::EC2::Route",
      "Metadata" : { "Description" : "Default traffic flows through the Internet Gateway." },
      "DependsOn": "AttachGateway",
      "Properties" : {
        "RouteTableId" : { "Ref": "PublicRouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId" : { "Ref": "InternetGateway" }
      }
    },
   
    
    "NatGatewayEIPDMZA" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },

    "NatGatewayDMZA" : {
      "Type" : "AWS::EC2::NatGateway",
      "DependsOn": "NatGatewayEIPDMZA",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : ["NatGatewayEIPDMZA", "AllocationId"]},
        "SubnetId" : { "Ref" : "PublicSubnetDMZA" }
      }
    },
  
    "NatRouteDMZA" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn": [ "NatGatewayDMZA", "PrivateRouteTableA" ],
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NatGatewayDMZA" }
      }
    },

    "NatGatewayEIPDMZB" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },

    "NatGatewayDMZB" : {
      "Type" : "AWS::EC2::NatGateway",
      "DependsOn": "NatGatewayEIPDMZB",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : ["NatGatewayEIPDMZB", "AllocationId"]},
        "SubnetId" : { "Ref" : "PublicSubnetDMZB" }
      }
    },
  
    "NatRouteDMZB" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn": [ "NatGatewayDMZB", "PrivateRouteTableB" ],
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NatGatewayDMZB" }
      }
    },  
  
  
  
    "PrivateRouteTableA" : { "Type": "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref": "VPC"},
        "Tags" : [
          {"Key": "Name", "Value" : { "Fn::Join": [ "", [ {"Ref": "VpcName"}, "-PRIVATE-RT-A" ] ] } },
          {"Key": "Application", "Value" : { "Ref": "AWS::StackId"} },
          {"Key": "network", "Value": "private" }
        ]
      }
    },

    "PrivateRouteTableB" : { "Type": "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref": "VPC"},
        "Tags" : [
          {"Key": "Name", "Value" : { "Fn::Join": [ "", [ {"Ref": "VpcName"}, "-PRIVATE-RT-B" ] ] } },
          {"Key": "Application", "Value" : { "Ref": "AWS::StackId"} },
          {"Key": "network", "Value": "private" }
        ]
      }
    },
    
  
  "DMZARoutingTableAssociation" : { "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetDMZA" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
  
  "DMZBRoutingTableAssociation" : { "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetDMZB" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
  
    "AppARouteTableAssociation" : { "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetAppA" },
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" }
      }
    },
  
    "AppBRouteTableAssociation" : { "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetAppB" },
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" }
      }
    },
  
    "DBARouteTableAssociation" : { "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetDBA" },
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" }
      }
    },
  
    "DBBRouteTableAssociation" : { "Type" : "AWS::EC2::SubnetRouteTableAssociation",
    "DependsOn":"PrivateSubnetDBB",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetDBB" },
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" }
      }
    },
  
  
    "BastionEC2InstanceDMZA" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" : "t2.micro",
        "SecurityGroupIds" : [ { "Ref" : "BastionSecurityGroup" } ],
        "KeyName" : { "Ref" : "KeyName" },
    "AvailabilityZone" : {"Fn::Join": [ "", [ { "Ref": "AWS::Region" }, "a" ] ] },
    "SubnetId" : {"Ref" : "PublicSubnetDMZA"},
    "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
             "#!/bin/bash \n",
             "yum update -y \n" ]]}
        },
        "ImageId" : { "Ref": "MZCFBastionAmiId" }
      }
    },

    "BastionEC2InstanceDMZB" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" : "t2.micro",
        "SecurityGroupIds" : [ { "Ref" : "BastionSecurityGroup" } ],
        "KeyName" : { "Ref" : "KeyName" },
    "AvailabilityZone" : {"Fn::Join": [ "", [ { "Ref": "AWS::Region" }, "b" ] ] },
    "SubnetId" : {"Ref" : "PublicSubnetDMZB"},
    "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
             "#!/bin/bash \n",
             "yum update -y \n" ]]}
        },
        "ImageId" : { "Ref": "MZCFBastionAmiId" }
      }
    },
  
    "MZCFEC2InstanceAppA" : {
      "Type" : "AWS::EC2::Instance",
    "DependsOn" : "DBEC2InstanceDBA",
      "Properties" : {
        "InstanceType" : "t2.micro",
        "SecurityGroupIds" : [ { "Ref" : "MZCFAppSecurityGroup" } ],
        "KeyName" : { "Ref" : "KeyName" },
    "AvailabilityZone" : {"Fn::Join": [ "", [ { "Ref": "AWS::Region" }, "a" ] ] },
    "PrivateIpAddress" : "10.0.3.100",
    "SubnetId" : {"Ref" : "PrivateSubnetAppA"},
    "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
             "#!/bin/bash \n",
             "yum update -y \n",
             "/sbin/service httpd restart \n" ]]}
        },
        "ImageId" : { "Ref": "MZCFAppAmiId" }
      }
    },

    "MZCFEC2InstanceAppB" : {
      "Type" : "AWS::EC2::Instance",
    "DependsOn" : "DBEC2InstanceDBA",
      "Properties" : {
        "InstanceType" : "t2.micro",
        "SecurityGroupIds" : [ { "Ref" : "MZCFAppSecurityGroup" } ],
        "KeyName" : { "Ref" : "KeyName" },
    "AvailabilityZone" : {"Fn::Join": [ "", [ { "Ref": "AWS::Region" }, "b" ] ] },
    "PrivateIpAddress" : "10.0.4.100",
    "SubnetId" : {"Ref" : "PrivateSubnetAppB"},
    "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
             "#!/bin/bash \n",
             "yum update -y \n",
             "/sbin/service httpd restart \n" ]]}
        },
        "ImageId" : { "Ref": "MZCFAppAmiId" }
      }
    },
  
  
    "DBEC2InstanceDBA" : {
      "Type" : "AWS::EC2::Instance",
    "DependsOn" : "BastionEC2InstanceDMZA",
      "Properties" : {
        "InstanceType" : "t2.micro",
        "SecurityGroupIds" : [ { "Ref" : "DBSecurityGroup" } ],
        "KeyName" : { "Ref" : "KeyName" },
    "AvailabilityZone" : {"Fn::Join": [ "", [ { "Ref": "AWS::Region" }, "a" ] ] },
    "PrivateIpAddress" : "10.0.5.100",
    "SubnetId" : {"Ref" : "PrivateSubnetDBA"},
    "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
             "#!/bin/bash \n",
             "yum update -y \n",
             "sudo /sbin/service mysqld start \n"]]}
        },
        "ImageId" : { "Ref": "MZCFDBAmiId" }
      }
    },
  
    "BastionSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access via port 22",
    "VpcId" : {"Ref" : "VPC"},
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : "22",
          "ToPort" : "22",
          "CidrIp" : "0.0.0.0/0"
        } ]
      }
    },
  
    "MZCFAppSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
    "DependsOn" : "WebDMZSecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access via port 22",
    "VpcId" : {"Ref" : "VPC"},
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : "22",
          "ToPort" : "22",
          "SourceSecurityGroupId": {"Ref" : "BastionSecurityGroup"}
        },
    {
          "IpProtocol" : "tcp",
          "FromPort" : "8080",
          "ToPort" : "8080",
          "SourceSecurityGroupId": {"Ref" : "WebDMZSecurityGroup"}
        }]
      }
    },

    "WebDMZSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access via port 22",
    "VpcId" : {"Ref" : "VPC"},
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : "8080",
          "ToPort" : "8080",
          "CidrIp" : "0.0.0.0/0"
        },
    {
          "IpProtocol" : "tcp",
          "FromPort" : "80",
          "ToPort" : "80",
          "CidrIp" : "0.0.0.0/0"
        }]
      }
    },

    "DBSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
    "DependsOn" : "MZCFAppSecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access via port 22",
    "VpcId" : {"Ref" : "VPC"},
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : "22",
          "ToPort" : "22",
          "SourceSecurityGroupId": {"Ref" : "BastionSecurityGroup"}
        },
    {
          "IpProtocol" : "tcp",
          "FromPort" : "49161",
          "ToPort" : "49161",
          "SourceSecurityGroupId": {"Ref" : "MZCFAppSecurityGroup"}
        }]
      }
    },
  
    "MZCFElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
    "DependsOn" : "MZCFEC2InstanceAppB",
      "Properties" : {
        "CrossZone" : "true",
    "Subnets" : [{ "Ref" : "PublicSubnetDMZA" }, { "Ref" : "PublicSubnetDMZB" }],
    "SecurityGroups" : [ { "Ref" : "WebDMZSecurityGroup"} ], 
        "Instances" : [ { "Ref" : "MZCFEC2InstanceAppA" },{ "Ref" : "MZCFEC2InstanceAppB" } ],
        "LBCookieStickinessPolicy" : [{
          "PolicyName" : "myLBPolicy",
          "CookieExpirationPeriod" : "180"
        } ],
        "Listeners" : [ {
          "LoadBalancerPort" : "80",
          "InstancePort" : "8080",
          "Protocol" : "HTTP",
          "PolicyNames" : [ "myLBPolicy" ]
        } ],
        "HealthCheck" : {
          "Target" : "HTTP:8080/",
          "HealthyThreshold" : "2",
          "UnhealthyThreshold" : "2",
          "Interval" : "10",
          "Timeout" : "5"
        }
      }
    }

  }
}